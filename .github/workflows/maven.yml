name: Package JavaFX Application

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Set up Maven
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
        maven-version: 'latest'  # Use the latest Maven version

    - name: Install JavaFX SDK
      run: |
        # Define variables for the latest version
        JAVA_FX_VERSION="21.0.4"  # Update this to the latest version
        JAVA_FX_SDK_URL="https://download2.gluonhq.com/openjfx/21.0.4/openjfx-21.0.4_linux-x64_bin-sdk.zip"
        
        # Download and unzip JavaFX SDK
        wget $JAVA_FX_SDK_URL -O javafx-sdk.zip
        unzip javafx-sdk.zip -d javafx-sdk
        sudo apt-get update
        sudo apt-get install -y openjdk-21-jdk

    - name: Install JavaFX JMods
      run: |
        # Define variables for the latest version
        JAVA_FX_JMODS_URL="https://download2.gluonhq.com/openjfx/21.0.4/openjfx-21.0.4_linux-x64_bin-jmods.zip"
        
        # Download and unzip JavaFX JMods
        wget $JAVA_FX_JMODS_URL -O javafx-jmods.zip
        unzip javafx-jmods.zip -d javafx-jmods

    - name: Build and package application
      run: |
        mvn clean package

    - name: Package with jpackage
      run: |
        appName="maopass"
        version="1.0"
        inputDir="target"  # Directory containing the JAR file
        jarFile="MaoPass-1.0.jar"  # Adjust to your app's JAR file name
        outputDir="target/package"
        jmodsDir="${{ github.workspace }}/javafx-jmods/jmods"
        sdkDir="${{ github.workspace }}/javafx-sdk/lib"

        mkdir -p $outputDir
        
        jpackage --input $inputDir --name $appName --version $version --main-jar $jarFile --type deb --dest $outputDir --add-modules javafx.controls,javafx.fxml --module-path $jmodsDir --runtime-image $sdkDir

    - name: Upload .deb file
      uses: actions/upload-artifact@v3
      with:
        name: deb-package
        path: target/package/${appName}.deb
