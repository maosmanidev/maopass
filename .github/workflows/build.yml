name: Build and Release Actions

on:
  push:
    branches:
      - "main"
    tags:
      - "v*.*.*"

jobs:
build-macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        javafx: true
        distribution: 'temurin'
        architecture: x64
        cache: maven
    - name: Install JavaFX SDK
      run: |
        JAVA_FX_VERSION="21.0.4"
        JAVA_FX_SDK_URL="https://download2.gluonhq.com/openjfx/21.0.4/openjfx-21.0.4_macos-x64_bin-sdk.zip"
        curl -L $JAVA_FX_SDK_URL -o javafx-sdk.zip
        unzip javafx-sdk.zip -d javafx-sdk
    - name: Install JavaFX JMods
      run: |
        JAVA_FX_JMODS_URL="https://download2.gluonhq.com/openjfx/21.0.4/openjfx-21.0.4_macos-x64_bin-jmods.zip"
        curl -L $JAVA_FX_JMODS_URL -o javafx-jmods.zip
        if [ -f "javafx-jmods.zip" ]; then
          echo "Unzipping JavaFX JMods..."
          unzip javafx-jmods.zip -d javafx-jmods || echo "Failed to unzip JavaFX JMods. Ensure the file is correct."
        else
          echo "JavaFX JMods ZIP file not found."
        fi
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: Clean With Maven
      run: mvn clean
    - name: Install dependencies and run tests
      run: mvn clean test
    - name: Build with Maven
      run: mvn install
    - name: Copy Logo
      run: cp logo.ico target/
    - name: Copy Libraries
      run: cp -r lib/ target/
    - name: Packaging for macOS
      run: |
        cd target/
        jpackage --type dmg --input . --dest . --main-jar ./MaoPass-1.0.jar --main-class Main --module-path "../javafx-jmods/javafx-jmods-21.0.4/" --add-modules javafx.controls,javafx.fxml --name MaoPass --icon ./logo.ico
    - name: Staging macOS DMG
      run: |
        cp target/*.dmg ./ 
    - name: Upload macOS DMG to Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.ACTIONS_TESTS_SECRET }}
      with:
        name: Release ${{ github.ref_name }}
        files: |
          *.dmg

  create-release:
    needs: [build-macos]
    runs-on: ubuntu-latest
    steps:
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.ACTIONS_TESTS_SECRET  }}
      with:
        name: Release ${{ github.ref_name }}
        files: |
            **/*.dmg
          
           
        

