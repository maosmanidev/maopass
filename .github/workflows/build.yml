name: Build and Release Actions

on:
  push:
    branches:
      - "main"
    tags:
      - "v*.*.*"

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        javafx: true
        distribution: 'temurin'
        architecture: x64
        cache: maven
    - name: Install JavaFX SDK
      run: |
        JAVA_FX_VERSION="21.0.4"  # Update this to the latest version
        JAVA_FX_SDK_URL="https://download2.gluonhq.com/openjfx/21.0.4/openjfx-21.0.4_linux-x64_bin-sdk.zip"
        wget $JAVA_FX_SDK_URL -O javafx-sdk.zip
        unzip javafx-sdk.zip -d javafx-sdk
        sudo apt-get update
        sudo apt-get install -y openjdk-21-jdk
    - name: Install JavaFX JMods
      run: |
        JAVA_FX_JMODS_URL="https://download2.gluonhq.com/openjfx/21.0.4/openjfx-21.0.4_linux-x64_bin-jmods.zip"
        wget $JAVA_FX_JMODS_URL -O javafx-jmods.zip
        unzip javafx-jmods.zip -d javafx-jmods
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: Clean With Maven
      run: mvn clean
    - name: Install dependencies and run tests
      run: mvn clean test
    - name: Build with Maven
      run: mvn install
    - name: Packaging for DEBs
      run: |
        cd target/
        jpackage --type deb --input . --dest . --main-jar ./MaoPass-1.0.jar --main-class Main --module-path "../javafx-jmods/javafx-jmods-21.0.4/" --add-modules javafx.controls,javafx.fxml --name MaoPass --linux-shortcut --install-dir /opt --linux-menu-group Utility --icon ./logo.png --name "MaoPass"
    - name: Staging DEBs
      run: |
        cp target/*.deb ./ 
    - name: Upload Linux DEBs to Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        name: Release ${{ github.ref_name }}
        files: |
          *.deb

  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        javafx: true
        distribution: 'temurin'
        architecture: x64
        cache: maven
    - name: Install JavaFX SDK
      run: |
        $JAVA_FX_VERSION = "21.0.4"
        $JAVA_FX_SDK_URL = "https://download2.gluonhq.com/openjfx/21.0.4/openjfx-21.0.4_windows-x64_bin-sdk.zip"
        Invoke-WebRequest -Uri $JAVA_FX_SDK_URL -OutFile javafx-sdk.zip
        Expand-Archive -Path javafx-sdk.zip -DestinationPath javafx-sdk
    - name: Install JavaFX JMods
      run: |
        $JAVA_FX_JMODS_URL = "https://download2.gluonhq.com/openjfx/21.0.4/openjfx-21.0.4_windows-x64_bin-jmods.zip"
        Invoke-WebRequest -Uri $JAVA_FX_JMODS_URL -OutFile javafx-jmods.zip
        Expand-Archive -Path javafx-jmods.zip -DestinationPath javafx-jmods
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: Clean With Maven
      run: mvn clean
    - name: Install dependencies and run tests
      run: mvn clean test
    - name: Build with Maven
      run: mvn install
    - name: Packaging for Windows
      run: |
        cd target/
        jpackage --type msi --input . --dest . --main-jar ./MaoPass-1.0.jar --main-class Main --module-path "../javafx-jmods/javafx-jmods-21.0.4/" --add-modules javafx.controls,javafx.fxml --name MaoPass --icon ./logo.png
    - name: Staging Windows Executable
      run: |
        cp target/*.msi ./ 
    - name: Upload Windows Executable to Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        name: Release ${{ github.ref_name }}
        files: |
          *.msi

  build-macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        javafx: true
        distribution: 'temurin'
        architecture: x64
        cache: maven
    - name: Install JavaFX SDK
      run: |
        JAVA_FX_VERSION="21.0.4"
        JAVA_FX_SDK_URL="https://download2.gluonhq.com/openjfx/21.0.4/openjfx-21.0.4_macos-x64_bin-sdk.zip"
        curl -L $JAVA_FX_SDK_URL -o javafx-sdk.zip
        unzip javafx-sdk.zip -d javafx-sdk
    - name: Install JavaFX JMods
      run: |
        JAVA_FX_JMODS_URL="https://download2.gluonhq.com/openjfx/21.0.4/openjfx-21.0.4_macos-x64_bin-jmods.zip"
        curl -L $JAVA_FX_JMODS_URL -o javafx-jmods.zip
        unzip javafx-jmods.zip -d javafx-jmods
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: Clean With Maven
      run: mvn clean
    - name: Install dependencies and run tests
      run: mvn clean test
    - name: Build with Maven
      run: mvn install
    - name: Packaging for macOS
      run: |
        cd target/
        jpackage --type dmg --input . --dest . --main-jar ./MaoPass-1.0.jar --main-class Main --module-path "../javafx-jmods/javafx-jmods-21.0.4/" --add-modules javafx.controls,javafx.fxml --name MaoPass --icon ./logo.png
    - name: Staging macOS DMG
      run: |
        cp target/*.dmg ./ 
    - name: Upload macOS DMG to Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        name: Release ${{ github.ref_name }}
        files: |
          *.dmg
